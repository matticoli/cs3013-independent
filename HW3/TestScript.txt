Script started on Mon 01 Oct 2018 12:43:30 AM EDT
bash-3.2$ make all
gcc -g -c life.c -lpthread
life.c: In function 'main':
life.c:159: warning: cast to pointer from integer of different size
gcc: -lpthread: linker input file unused because linking not done
gcc -g -c twoD.c
gcc -g life.o twoD.o -lpthread -o life
gcc -g addem.c -lpthread -o addem
addem.c: In function 'main':
addem.c:63: warning: cast to pointer from integer of different size
bash-3.2$ ./addem
Adds numbers 1 through numToSum using numThreads worker threads (max 10)
Usage:
addem <numThreads> <numToSum>
bash-3.2$ .a /addem 0 0
Must have between 1 and 10 threads. Run addem without parameters for command syntax
bash-3.2$ ./addem 1 10  50
The total from 1 to 50 using 1 threads is 1275
bash-3.2$ ./addem 10 50
The total from 1 to 50 using 10 threads is 1275
bash-3.2$ . ./addem 3 10
The total from 1 to 10 using 3 threads is 55
bash-3.2$ ./addem 3 1010    10 3
The total from 1 to 3 using 10 threads is 6
bash-3.2$ ./;ofe    life
============
Game of Life
============
Usage:
  ./life #threads inputFile #generations [print (y/n)] [pause (y/n)]
bash-3.2$ ./life 10 ./testCases/blinker.txt 10 y y   y n
============
Game of Life
============
More threads than input rows specified, using 3 threads instead
Gen 1 (Start):
000
111
000

Gen 2:
010
010
010

Gen 3:
000
111
000
Reached oscilation state after 3 generations
bash-3.2$ ./life 10 ./testCases/blinker.txt 10 y n[1P[1P[1@2[1P[1@1 ./testCases/blinker.[1P[1@2[K./life 2 ./testCases/blinker.txt 10 y nt[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1@/[1@c[1@i[1@s[1P[1P[1@u[1@s[15@tomTestCase.txt 10[1P[1P[1P[1P[1Pn[K3
============
Game of Life
============
Gen 1 (Start):
10000001
01000010
00100100
00011000
00100100
01000010
10000001

Gen 3:
00000000
00111100
01000010
01000010
01000010
00111100
00000000
bash-3.2$ ./life 2 ./testCases/customTestCase.txt 3 30 y
============
Game of Life
============
Gen 1 (Start):
10000001
01000010
00100100
00011000
00100100
01000010
10000001

Gen 2:
00000000
01000010
00111100
00111100
00111100
01000010
00000000

Gen 3:
00000000
00111100
01000010
01000010
01000010
00111100
00000000

Gen 4:
00011000
00111100
01011010
11100111
01011010
00111100
00011000

Gen 5:
00100100
00000000
10000001
10000001
10000001
00000000
00100100

Gen 6:
00000000
00000000
00000000
11000011
00000000
00000000
00000000

Gen 7:
00000000
00000000
00000000
00000000
00000000
00000000
00000000

Gen 8:
00000000
00000000
00000000
00000000
00000000
00000000
00000000
Reached steady state after 8 generations
bash-3.2$ exit
exit

Script done on Mon 01 Oct 2018 12:49:35 AM EDT
